{"version":3,"sources":["serviceWorker.js","i18n.js","components/Modal.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","i18n","use","LanguageDetector","init","resources","en","translations","Tree","List","Reset","Export","Import","Outsider","Divorced","Deceased","Add","Search","Name","City","Contact","Gender","Status","Male","Female","Other","Spouse","Alive","Exs","Select","Save","Remove","welcomeAlert","resetConfirm","id","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","react","wait","Modal","props","handleClose","show","content","className","onClick","role","aria-label","prefix","tree","type","parents","name","status","gender","spouse","fullName","birthPlace","birthDate","city","contact","NodeLegacy","state","brand","nodes","this","filter","data","childs","i","includes","push","hasChildren","root","node","exs","length","divorced","j","divorcedRemarried","ex","k","hasChildrenFromExs","setState","t","map","key","style","display","n","ek","img","width","src","alt","Node","showModal","mode","scene","React","Component","translate","App","componentDidMount","resizeTreeWidth","isNew","setTimeout","localStorage","getItem","alert","removeItem","currentTab","document","getElementById","setProperty","offsetWidth","scrollIntoView","behaviour","inline","block","obj","modal","reset","confirm","setItem","zoomIn","scale","zoomOut","onSearchChange","e","console","log","target","value","search","import","input","createElement","onchange","file","files","reader","FileReader","readAsText","onload","readerEvent","result","JSON","parse","stringify","err","click","export","jsonStr","pom","setAttribute","encodeURIComponent","Date","toISOString","replace","createEvent","event","initEvent","dispatchEvent","initExport","showModalExport","pdfRef","createRef","pdfWidth","parseInt","clientWidth","pdfHeight","clientHeight","changeLanguage","height","color","fontSize","paddingTop","marginLeft","background","paddingLeft","verticalAlign","marginBottom","form","firstParent","secondParent","placeholder","onChange","toLowerCase","indexOf","item","Form","ref","margin","targetRef","options","orientation","unit","format","filename","toPdf","FormLegacy","spouseName","exName","remove","splice","save","add","uuidv4","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.69d6c2bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {initReactI18next} from 'react-i18next';\n\ni18n.use(LanguageDetector).init({\n  resources: {\n    en: {\n      translations: {\n        Tree: 'Tree',\n        List: 'List',\n        'Zoom in': 'Zoom in',\n        'Zoom out': 'Zoom out',\n        Reset: 'Reset',\n        Export: 'Export',\n        'Export to JSON': 'Export to JSON',\n        'Export to PDF': 'Export to PDF',\n        Import: 'Import',\n        'Original derivatives': 'Original derivatives',\n        Outsider: 'Outsider',\n        Divorced: 'Divorced',\n        Deceased: 'Deceased',\n\n        Add: 'Add',\n        Search: 'Search...',\n        Name: 'Name',\n        'Full name': 'Full name',\n        'Birth place': 'Birth place',\n        'Birth date': 'Birth date',\n        City: 'City',\n        Contact: 'Contact',\n        Gender: 'Gender',\n        Status: 'Status',\n        Male: 'Male',\n        Female: 'Female',\n        Other: 'Other',\n        Spouse: 'Spouse',\n        Alive: 'Alive',\n        '1st Parent': '1st Parent',\n        '2nd Parent': '2nd Parent',\n        Exs: 'Exs',\n        Select: 'Select',\n        Save: 'Save',\n        Remove: 'Remove',\n        'Select parent for': 'Select parent for',\n        'Select spouse for': 'Select spouse for',\n        'Select ex for': 'Select ex for',\n\n        // alerts\n        welcomeAlert:\n          'It seems that you have not created any tree yet. You can continue to edit existing basic tree structure or import your existing JSON file.',\n        resetConfirm:\n          'You are attempting to reset the tree to the basic tree structure. Please save your work befork dong this. Continue?',\n        'Are you sure that you want to remove this node?':\n          'Are you sure that you want to remove this node?',\n      },\n    },\n    id: {\n      translations: {\n        Tree: 'Trah',\n        List: 'Daftar',\n        'Zoom in': 'Besarkan',\n        'Zoom out': 'Kecilkan',\n        Reset: 'Reset',\n        Export: 'Ekspor',\n        'Export to JSON': 'Ekspor ke JSON',\n        'Export to PDF': 'Ekspor ke PDF',\n        Import: 'Impor',\n        'Original derivatives': 'Turunan asli',\n        Outsider: 'Luar',\n        Divorced: 'Cerai',\n        Deceased: 'Meninggal',\n\n        Add: 'Tambah',\n        Search: 'Cari...',\n        Name: 'Nama',\n        'Full name': 'Nama lengkap',\n        'Birth place': 'Tempat lahir',\n        'Birth date': 'Tanggal lahir',\n        City: 'Kota',\n        Contact: 'Kontak',\n        Gender: 'Jenis kelamin',\n        Status: 'Status',\n        Male: 'Laki',\n        Female: 'Perempuan',\n        Other: 'Lainnya',\n        Spouse: 'Pasangan',\n        Alive: 'Masih hidup',\n        '1st Parent': 'Ortu pertama',\n        '2nd Parent': 'Ortu kedua',\n        Exs: 'Mantan',\n        Select: 'Pilih',\n        Save: 'Simpan',\n        Remove: 'Hapus',\n        'Select parent for': 'Pilih ortu untuk',\n        'Select spouse for': 'Pilih pasangan untuk',\n        'Select ex for': 'Pilih mantan untuk',\n\n        // alerts\n        welcomeAlert:\n          'Anda sepertinya belum membuat silsilah. Silakan lanjut menyunting struktur silsilah yang ada atau impor berkas JSON Anda jika ada.',\n        resetConfirm:\n          'Anda akan mereset silsilah ke struktur sederhana. Simpan/ekspor terlebih dahulu silsilah Anda sebelum melakukan ini. Lanjut reset?',\n        'Are you sure that you want to remove this node?':\n          'Apakah Anda yakin ingin menghapus ini?',\n      },\n    },\n  },\n  fallbackLng: 'en',\n  debug: true,\n  ns: ['translations'],\n  defaultNS: 'translations',\n\n  interpolation: {\n    escapeValue: false, // not needed for react as it escapes by default\n  },\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","import React from \"react\";\nfunction Modal(props) {\n  const { handleClose, show, content } = props;\n  if (show) {\n    return (\n      <div className=\"app-modal\">\n        <div className=\"app-modal-content\">\n          {content}\n          <div className=\"app-modal-close-btn\" onClick={handleClose}>\n                  <span role=\"img\" aria-label=\"\">\n                    &#10060;{' '}\n                  </span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Modal;\n","import React from 'react';\n// import logo from \"./logo.svg\";\nimport {v4 as uuidv4} from 'uuid';\nimport './App.css';\nimport Modal from './components/Modal';\nimport ExportPDF from 'react-to-pdf';\nimport {translate} from 'react-i18next';\n\nconst prefix = process.env.REACT_APP_MODE === 'prod' ? '/silsilah' : '/';\n\n// Basic structure\nconst tree = [\n  {\n    id: '00000000-0000-0000-0000-00000000000',\n    type: 'root',\n  },\n  {\n    id: 'd066198b-d26e-4408-b71f-651e6e75d011',\n    parents: ['00000000-0000-0000-0000-00000000000'],\n    type: 'node',\n    name: 'Father',\n    status: 'alive',\n    gender: 'male',\n    spouse: '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    fullName: 'Father',\n    birthPlace: 'Jakarta Pusat',\n    birthDate: '19600101',\n    city: 'Jakarta',\n    contact: '+6281234567890',\n  },\n  {\n    id: '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    type: 'node',\n    status: 'deceased',\n    gender: 'female',\n    name: 'Mother',\n    fullName: 'Mother',\n    birthPlace: 'Jakarta Selatan',\n    birthDate: '19700101',\n    city: 'Jakarta',\n    contact: '+6281234567891',\n  },\n  {\n    id: '8a6d88a0-285d-4aed-a710-cfbd5f8dc5f6',\n    parents: [\n      'd066198b-d26e-4408-b71f-651e6e75d011',\n      '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    ],\n    status: 'alive',\n    type: 'node',\n    gender: 'male',\n    name: 'Son',\n    fullName: 'Son',\n    birthPlace: 'Jakarta Barat',\n    birthDate: '19900101',\n    city: 'Jakarta',\n    contact: '+6281234567892',\n  },\n  {\n    id: '14081329-ee06-4f53-8689-c9f716c5e3a2',\n    parents: [\n      'd066198b-d26e-4408-b71f-651e6e75d011',\n      '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    ],\n    status: 'alive',\n    type: 'node',\n    gender: 'female',\n    name: 'Daughter',\n    fullName: 'Daughter',\n    birthPlace: 'Jakarta Timur',\n    birthDate: '19900102',\n    city: 'Jakarta',\n    contact: '+6281234567893',\n  },\n];\n\nclass NodeLegacy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: 'Ford',\n    };\n  }\n  componentDidMount() {\n    let nodes = this.props.tree.filter(data => {\n      let childs = [];\n      for (let i in this.props.tree) {\n        if (\n          this.props.tree[i].parents &&\n          this.props.tree[i].parents.includes(data.id) &&\n          this.props.tree[i].parents.includes(data.spouse)\n        ) {\n          childs.push(this.props.tree[i]);\n          data.hasChildren = true;\n        }\n      }\n      data.childs = childs;\n      if (\n        data.parents &&\n        data.parents.includes(this.props.parents[0]) &&\n        (this.props.root || data.parents.includes(this.props.parents[1]))\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    for (let i in nodes) {\n      let node = nodes[i];\n      // divorced but not remarried\n      if (node.exs && node.exs.length === 1 && !node.spouse) {\n        nodes[i].spouse = node.exs[0].id;\n        nodes[i].divorced = true;\n      }\n      // divorced but has been remarried\n      if (!node.divorced && node.spouse && node.exs && node.exs.length > 0) {\n        node.divorcedRemarried = true;\n        for (let j in node.exs) {\n          let ex = node.exs[j];\n          for (let k in this.props.tree) {\n            if (\n              node.spouse &&\n              this.props.tree[k].parents &&\n              this.props.tree[k].parents.includes(node.id) &&\n              this.props.tree[k].parents.includes(ex.id)\n            ) {\n              nodes[i].hasChildrenFromExs = true;\n            }\n          }\n        }\n      }\n    }\n    this.setState({nodes: nodes}, () => {\n      // Do nothing\n    });\n  }\n  render() {\n    const {t, i18n} = this.props;\n    return (\n      <div>\n        {this.state.nodes &&\n          this.state.nodes.map((node, key) => {\n            return (\n              <div\n                id={this.props.root ? 'root-family' : ''}\n                className=\"family\"\n                key={key}>\n                {this.state.nodes.length > 1 &&\n                  node.exs &&\n                  node.exs.length > 0 && (\n                    <div className={'sibling-line-right-with-exs'}></div>\n                  )}\n                {node.divorcedRemarried &&\n                  node.exs &&\n                  node.exs.length > 0 &&\n                  node.exs.map((ex, k) => {\n                    return (\n                      <div style={{display: 'inline-block'}} key={k}>\n                        {this.props.tree\n                          .filter(data => {\n                            return data.id === ex.id;\n                          })\n                          .map((n, ek) => {\n                            return (\n                              <div className=\"family\" key={ek}>\n                                <div\n                                  className={\n                                    'node' +\n                                    (n.parents && node.parents.length > 0\n                                      ? ' node-gen'\n                                      : '') +\n                                    (n.status === 'deceased'\n                                      ? ' node-deceased'\n                                      : '')\n                                  }\n                                  id={n.id}>\n                                  {n.name}\n                                  {n.img && (\n                                    <img width=\"100\" src={n.img} alt=\"\" />\n                                  )}\n                                </div>\n                                {key === this.state.nodes.length - 1 &&\n                                  this.state.nodes.length > 1 &&\n                                  node.exs &&\n                                  node.exs.length > 0 && (\n                                    <div className={'marital-line-exs'}></div>\n                                  )}\n                                {node.hasChildrenFromExs && (\n                                  <div className=\"derivative-line-ex\"></div>\n                                )}\n                                <Node\n                                  tree={this.props.tree}\n                                  parents={[node.id, n.id]}\n                                  showModal={this.props.showModal}\n                                />\n                              </div>\n                            );\n                          })}\n                      </div>\n                    );\n                  })}\n                <div\n                  id={this.props.root ? 'root-family-sub' : ''}\n                  className=\"family\">\n                  {key === 0 && this.state.nodes.length > 1 && (\n                    <div className={'sibling-line-left'}></div>\n                  )}\n                  {key === this.state.nodes.length - 1 &&\n                    this.state.nodes.length > 1 && (\n                      <div\n                        className={\n                          'sibling-line-right' +\n                          (node.spouse ? ' sibling-line-right-with-spouse' : '')\n                        }></div>\n                    )}\n                  {!(key === 0 || key === this.state.nodes.length - 1) &&\n                    this.state.nodes.length > 1 && (\n                      <div className={'sibling-line-center'}></div>\n                    )}\n                  <div\n                    className={\n                      'node' +\n                      (node.parents && node.parents.length > 0\n                        ? ' node-gen'\n                        : '') +\n                      (node.status === 'deceased' ? ' node-deceased' : '')\n                    }\n                    id={node.id}\n                    onClick={() => {\n                      node.mode = 'edit';\n                      node.scene = 'form';\n                      this.props.showModal(node);\n                    }}>\n                    {!this.props.root && (\n                      <div className=\"derivative-line-2\"></div>\n                    )}\n                    {key === 0 &&\n                      this.state.nodes.length > 1 &&\n                      node.spouse && (\n                        <div className=\"sibling-line-left-node\"></div>\n                      )}\n                    {key === this.state.nodes.length - 1 &&\n                      this.state.nodes.length > 1 &&\n                      node.spouse && (\n                        <div className={'sibling-line-right-node'}></div>\n                      )}\n                    {!this.props.root &&\n                      key === 0 &&\n                      this.state.nodes.length === 1 &&\n                      node.spouse && (\n                        <div className={'sibling-line-left-node'}></div>\n                      )}\n                    {node.name}\n                    {node.img && <img width=\"100\" src={node.img} alt=\"\" />}\n                  </div>\n                  {node.spouse && !node.divorced && (\n                    <div className=\"marital-line\"></div>\n                  )}\n                  {node.spouse && node.divorced && (\n                    <div className=\"marital-line-divorced\"></div>\n                  )}\n                  {node.spouse &&\n                    this.props.tree\n                      .filter(data => {\n                        return data.id === node.spouse;\n                      })\n                      .map((n, k) => {\n                        return (\n                          <div\n                            key={k}\n                            className={\n                              'node' +\n                              (n.status === 'deceased' ? ' node-deceased' : '')\n                            }\n                            onClick={() => {\n                              n.mode = 'edit';\n                              n.scene = 'form';\n                              this.props.showModal(n);\n                            }}>\n                            {n.name}\n                          </div>\n                        );\n                      })}\n                  {node.hasChildren && <div className=\"derivative-line\"></div>}\n                  {node.hasChildren && (\n                    <div>\n                      <Node\n                        tree={this.props.tree}\n                        parents={[node.id, node.spouse]}\n                        showModal={this.props.showModal}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nconst Node = translate('translations')(NodeLegacy);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 'tree',\n      tree: JSON.parse(window.localStorage.getItem('tree')) || tree,\n      isNew: window.localStorage.getItem('tree') ? false : true,\n      scale: 1.0,\n      showModalExport: false,\n    };\n    this.pdfRef = React.createRef();\n  }\n  componentDidMount = () => {\n    // let familyTree;\n    this.resizeTreeWidth();\n    if (this.state.isNew) {\n      setTimeout(() => {\n        if (!window.localStorage.getItem('isReset')) {\n          alert(this.props.t('welcomeAlert'));\n        }\n        window.localStorage.removeItem('isReset');\n      }, 500);\n    }\n  };\n\n  // This help draggable scroll\n  resizeTreeWidth = () => {\n    setTimeout(() => {\n      if (this.state.currentTab === 'tree') {\n        document\n          .getElementById('main-wrapper')\n          .style.setProperty(\n            'width',\n            document.getElementById('root-family').offsetWidth + 100 + 'px',\n          );\n        document.getElementById('center').scrollIntoView({\n          behaviour: 'smooth',\n          inline: 'center',\n          block: 'center',\n        });\n      }\n    }, 100);\n  };\n\n  showModal = obj => {\n    this.setState({modal: true, node: obj});\n  };\n\n  reset = () => {\n    if (window.confirm(this.props.t('resetConfirm'))) {\n      window.localStorage.removeItem('tree');\n      window.localStorage.setItem('isReset', 'true');\n      window.location = prefix;\n    }\n  };\n\n  zoomIn = () => {\n    let scale = this.state.scale;\n    scale += 0.1;\n    if (scale > 1) return;\n    this.setState({scale: scale}, () => {\n      document\n        .getElementById('main-wrapper')\n        .style.setProperty('transform', 'scale(' + scale + ')');\n    });\n  };\n\n  zoomOut = () => {\n    let scale = this.state.scale;\n    scale -= 0.1;\n    this.setState({scale: scale}, () => {\n      document\n        .getElementById('main-wrapper')\n        .style.setProperty('transform', 'scale(' + scale + ')');\n    });\n  };\n\n  onSearchChange = e => {\n    console.log(e.target.value);\n    this.setState({search: e.target.value});\n  };\n\n  // Import data from JSON file\n  import = () => {\n    var input = document.createElement('input');\n    input.type = 'file';\n\n    input.onchange = e => {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      reader.readAsText(file, 'UTF-8');\n      reader.onload = readerEvent => {\n        var content = readerEvent.target.result;\n        try {\n          let tree = JSON.parse(content);\n          window.localStorage.setItem('tree', JSON.stringify(tree));\n          window.location = prefix;\n        } catch (err) {\n          alert(err);\n        }\n      };\n    };\n    input.click();\n  };\n\n  // Export data to JSON file\n  export = () => {\n    let jsonStr = JSON.stringify(this.state.tree);\n    var pom = document.createElement('a');\n    pom.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(jsonStr),\n    );\n    pom.setAttribute(\n      'download',\n      'lineage-' + new Date().toISOString().replace(/:/g, '-') + '.json',\n    );\n\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      pom.dispatchEvent(event);\n    } else {\n      pom.click();\n    }\n  };\n\n  initExport = () => {\n    this.setState({\n      showModalExport: true,\n    });\n  };\n\n  render() {\n    const {t, i18n} = this.props;\n    const pdfWidth = window.document.getElementById('main-wrapper')\n      ? parseInt(window.document.getElementById('main-wrapper').clientWidth) *\n        (75 / 100)\n      : 0;\n    const pdfHeight = window.document.getElementById('main-wrapper')\n      ? parseInt(window.document.getElementById('main-wrapper').clientHeight)\n      : 0;\n    return (\n      <div className=\"App\">\n        <div className=\"i18n\">\n          <span\n            className={'i18n-options'}\n            onClick={() => {\n              i18n.changeLanguage('en');\n            }}>\n            English\n          </span>\n          &nbsp;/&nbsp;\n          <span\n            className={'i18n-options'}\n            onClick={() => {\n              i18n.changeLanguage('id');\n            }}>\n            Bahasa Indonesia\n          </span>\n        </div>\n        <div className=\"header\">\n          <div\n            style={{height: 27, color: '#a1a1a1', fontSize: 14, paddingTop: 3}}>\n            Ojo nganti kepatèn obor\n          </div>\n          <div>\n            <div\n              className={\n                'main-menu-item' +\n                (this.state.currentTab === 'list'\n                  ? ' main-menu-item-selected'\n                  : '')\n              }\n              onClick={() => {\n                console.log(JSON.stringify(this.state.node));\n                window.localStorage.setItem(\n                  'tree',\n                  JSON.stringify(this.state.tree),\n                );\n                this.setState({currentTab: 'list'});\n              }}>\n              {t('List')}\n            </div>\n            <div\n              className={\n                'main-menu-item' +\n                (this.state.currentTab === 'tree'\n                  ? ' main-menu-item-selected'\n                  : '')\n              }\n              onClick={() => {\n                if (this.state.currentTab === 'tree') return;\n                window.location = prefix;\n              }}>\n              {t('Tree')}\n            </div>\n          </div>\n          <div className=\"tools\">\n            <button onClick={this.import}>{t('Import')}</button>&nbsp;&nbsp;\n            <button onClick={this.initExport}>{t('Export')}</button>&nbsp;&nbsp;\n            <button onClick={this.reset}>{t('Reset')}</button>&nbsp;&nbsp;\n            {this.state.currentTab === 'tree' && (\n              <div style={{display: 'inline-block', color: 'grey'}}>\n                <button onClick={this.zoomIn}>{t('Zoom in')}</button>\n                &nbsp;&nbsp;\n                <button onClick={this.zoomOut}>{t('Zoom out')}</button>\n                {/* Legenda*/}\n              </div>\n            )}\n            {this.state.currentTab === 'tree' && (\n              <div style={{display: 'inline-block', color: 'grey'}}>\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: 'blue',\n                    display: 'inline-block',\n                  }}></div>\n                <span style={{fontSize: 12, paddingLeft: 5}}>\n                  {t('Original derivatives')}\n                </span>\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: 'green',\n                    display: 'inline-block',\n                  }}></div>\n                <span style={{fontSize: 12, paddingLeft: 5}}>\n                  {t('Outsider')}\n                </span>\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: 'red',\n                    display: 'inline-block',\n                  }}></div>\n                <span style={{fontSize: 12, paddingLeft: 5}}>\n                  {t('Divorced')}\n                </span>\n                <div\n                  style={{\n                    verticalAlign: 'bottom',\n                    marginBottom: 2,\n                    marginLeft: 10,\n                    width: 15,\n                    height: 15,\n                    background: 'grey',\n                    display: 'inline-block',\n                  }}></div>\n                <span style={{fontSize: 12, paddingLeft: 5}}>\n                  {t('Deceased')}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        {/* List */}\n        {this.state.currentTab === 'list' && (\n          <div className=\"family-list\">\n            <div className=\"family-list-sidebar\">\n              <div>\n                <div className=\"family-list-buttons\">\n                  <div\n                    className=\"family-list-button\"\n                    onClick={() => {\n                      this.setState({form: false}, () => {\n                        this.setState({\n                          form: true,\n                          node: {\n                            name: '',\n                            fullName: '',\n                            birthPlace: '',\n                            birthDate: '',\n                            city: '',\n                            contact: '',\n                            gender: 'male',\n                            status: 'alive',\n                            firstParent: '',\n                            secondParent: '',\n                            exs: [],\n                            mode: 'new',\n                          },\n                        });\n                      });\n                    }}>\n                    {t('Add')}\n                  </div>\n                </div>\n                <input\n                  placeholder={t('Search')}\n                  className=\"search-box\"\n                  type=\"text\"\n                  onChange={this.onSearchChange}\n                />\n              </div>\n              <div className=\"family-list-items\">\n                {this.state.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className={\n                          'family-list-item' +\n                          (this.state.node && this.state.node.id === item.id\n                            ? ' family-list-item-selected'\n                            : '')\n                        }\n                        onClick={() => {\n                          let node = item;\n                          node.mode = 'edit';\n                          this.setState({form: false}, () => {\n                            this.setState({form: true, node: node});\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n            {this.state.form && (\n              <div className=\"family-list-content\">\n                <Form tree={this.state.tree} node={this.state.node} />\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Tree */}\n        {this.state.currentTab === 'tree' && (\n          <div className=\"family-tree\">\n            {/* Family tree */}\n            <div className=\"dragscroll\">\n              <div id=\"main-wrapper\" ref={this.pdfRef}>\n                <div style={{width: 0, margin: '0 auto'}} id=\"center\"></div>\n                <Node\n                  tree={this.state.tree}\n                  parents={[this.state.tree[0].id]}\n                  root={true}\n                  showModal={this.showModal}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Modal */}\n        {this.state.modal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <div className=\"close-container\">\n                <div\n                  className=\"close\"\n                  onClick={() => {\n                    this.setState({modal: false, node: {}});\n                  }}>\n                  <span role=\"img\" aria-label=\"\">\n                    &#10060;{' '}\n                  </span>\n                </div>\n              </div>\n              <Form tree={this.state.tree} node={this.state.node} />\n            </div>\n          </div>\n        )}\n        <Modal\n          show={this.state.showModalExport}\n          handleClose={() => {\n            this.setState({showModalExport: false});\n          }}\n          content={\n            <div>\n              <h4>{t('Export')}</h4>\n              <button onClick={this.export}>{t('Export to JSON')}</button>\n              &nbsp;\n              <ExportPDF\n                targetRef={this.pdfRef}\n                options={{\n                  orientation: 'landscapce',\n                  unit: 'px',\n                  format: [pdfWidth, pdfHeight],\n                }}\n                filename={\n                  'lineage-' +\n                  new Date().toISOString().replace(/:/g, '-') +\n                  '.pdf'\n                }>\n                {({toPdf}) => (\n                  <button onClick={toPdf}>{t('Export to PDF')}</button>\n                )}\n              </ExportPDF>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default translate('translations')(App);\n\nclass FormLegacy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scene: 'form',\n    };\n  }\n  componentDidMount = () => {\n    let obj = JSON.parse(JSON.stringify(this.props.node));\n    // Parse parent\n    if (obj.parents && obj.parents[0]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[0]) {\n          obj.firstParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    if (obj.parents && obj.parents[1]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[1]) {\n          obj.secondParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse spouse\n    if (obj.spouse && obj.spouse.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.spouse) {\n          obj.spouseName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse exs\n    if (obj.exs && obj.exs.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.exs[0].id) {\n          obj.exName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    this.setState(obj);\n  };\n  onChange = e => {\n    if (e && e.target && e.target.name && e.target.value) {\n      let obj = {};\n      obj[e.target.name] = e.target.value;\n      this.setState(obj);\n    }\n  };\n\n  remove = () => {\n    if (\n      !window.confirm(\n        this.props.t('Are you sure that you want to remove this node?'),\n      )\n    ) {\n      return;\n    }\n    this.setState({search: null});\n    let tree = this.props.tree;\n    for (let i in tree) {\n      console.log(tree[i]);\n      if (tree[i].id === this.state.id) {\n        tree.splice(i, 1);\n        break;\n      }\n    }\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  save = () => {\n    this.setState({search: null});\n    let tree = this.props.tree;\n    for (let i in tree) {\n      if (tree[i].id === this.state.id) {\n        tree[i] = {\n          id: this.state.id,\n          name: this.state.name,\n          fullName: this.state.fullName,\n          birthPlace: this.state.birthPlace,\n          birthDate: this.state.birthDate,\n          city: this.state.city,\n          contact: this.state.contact,\n          gender: this.state.gender,\n          status: this.state.status,\n          firstParent: this.state.firstParent,\n          secondParent: this.state.secondParent,\n          parents: this.state.parents,\n          spouse: this.state.spouse,\n          exs: this.state.exs || [],\n        };\n        console.log(tree[i]);\n        break;\n      }\n    }\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  add = () => {\n    this.setState({search: null});\n    let tree = this.props.tree;\n    tree.push({\n      id: uuidv4(),\n      name: this.state.name,\n      fullName: this.state.fullName,\n      birthPlace: this.state.birthPlace,\n      birthDate: this.state.birthDate,\n      city: this.state.city,\n      contact: this.state.contact,\n      gender: this.state.gender,\n      status: this.state.status,\n      firstParent: this.state.firstParent,\n      secondParent: this.state.secondParent,\n      parents: this.state.parents,\n      spouse: this.state.spouse,\n      exs: this.state.exs || [],\n    });\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  onSearchChange = e => {\n    console.log(e.target.value);\n    this.setState({search: e.target.value});\n  };\n  render() {\n    const {t, i18n} = this.props;\n    return (\n      <div>\n        {this.state.scene === 'selectParent' && (\n          <div>\n            <div className=\"select-for-label\">\n              {t('Select parent for')} {this.state.name}\n            </div>\n            <input\n              placeholder={t('Search')}\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          let parents = this.state.parents || [];\n                          console.log(parents);\n                          if (parents && parents.length === 0) {\n                            parents.push(node.id);\n                            this.setState({\n                              firstParent: node.name,\n                              parents: parents,\n                              scene: 'form',\n                            });\n                          } else if (parents) {\n                            parents.push(node.id);\n                            this.setState({\n                              secondParent: node.name,\n                              parents: parents,\n                              scene: 'form',\n                            });\n                          }\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'selectSpouse' && (\n          <div>\n            <div className=\"select-for-label\">\n              {t('Select spouse for')} {this.state.name}\n            </div>\n            <input\n              placeholder={t('Search')}\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            spouseName: node.name,\n                            spouse: node.id,\n                            scene: 'form',\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'selectEx' && (\n          <div>\n            <div className=\"select-for-label\">\n              {t('Select ex for')} {this.state.name}\n            </div>\n            <input\n              placeholder={t('Search')}\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            exName: node.name,\n                            exs: [{id: node.id}],\n                            scene: 'form',\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'form' && (\n          <div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Name')}</div>\n              <input\n                name=\"name\"\n                placeholder={t('Name')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Full name')}</div>\n              <input\n                name=\"fullName\"\n                placeholder={t('Full name')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.fullName}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Birth place')}</div>\n              <input\n                name=\"birthPlace\"\n                placeholder={t('Birth place')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthPlace}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Birth date')}</div>\n              <input\n                name=\"birthDate\"\n                placeholder={t('Birth place')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthDate}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('City')}</div>\n              <input\n                name=\"city\"\n                placeholder={t('City')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.city}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Contact')}</div>\n              <input\n                name=\"contact\"\n                placeholder={t('Contact')}\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.contact}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Gender')}</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'male' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'male'});\n                  }}>\n                  {t('Male')}\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'female' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'female'});\n                  }}>\n                  {t('Female')}\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'other' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'other'});\n                  }}>\n                  {t('Other')}\n                </span>\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Status</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.status === 'alive' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({status: 'alive'});\n                  }}>\n                  {t('Alive')}\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.status === 'deceased' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({status: 'deceased'});\n                  }}>\n                  {t('Deceased')}\n                </span>\n              </div>\n            </div>\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                '00000000-0000-0000-0000-00000000000' ||\n                this.state.parents[0] === '0')\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">{t('1st Parent')}</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      'radio' +\n                      (this.state.parents && this.state.parents[0]\n                        ? ' radio-selected'\n                        : '')\n                    }\n                    onClick={() => {\n                      this.setState({search: ''}, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[0] &&\n                            this.state.firstParent\n                          )\n                        ) {\n                          this.setState({scene: 'selectParent'});\n                        }\n                      });\n                    }}>\n                    {this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent\n                    ) && t('Select')}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[0] &&\n                    this.state.firstParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          if (\n                            this.state.parents &&\n                            this.state.parents.length > 1\n                          ) {\n                            let parents = this.state.parents;\n                            parents = [this.state.parents[1]];\n                            let firstParent = this.state.secondParent;\n                            this.setState({\n                              parents: parents,\n                              firstParent: firstParent,\n                              secondParent: null,\n                            });\n                          } else {\n                            let parents = [];\n                            this.setState({\n                              parents: parents,\n                              firstParent: null,\n                              secondParent: null,\n                            });\n                          }\n                        }}>\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                '00000000-0000-0000-0000-00000000000' ||\n                this.state.parents[0] === '0')\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">{t('2nd Parent')}</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      'radio' +\n                      (this.state.parents && this.state.parents[1]\n                        ? ' radio-selected'\n                        : '')\n                    }\n                    onClick={() => {\n                      this.setState({search: ''}, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[1] &&\n                            this.state.secondParent\n                          )\n                        ) {\n                          this.setState({scene: 'selectParent'});\n                        }\n                      });\n                    }}>\n                    {this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent\n                    ) && t('Select')}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[1] &&\n                    this.state.secondParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          let parents = [this.state.parents[0]];\n                          this.setState({\n                            parents: parents,\n                            secondParent: null,\n                          });\n                        }}>\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Spouse')}</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.spouse && this.state.spouse.length > 0\n                      ? ' radio-selected'\n                      : '')\n                  }\n                  onClick={() => {\n                    this.setState({search: ''}, () => {\n                      if (!this.state.spouse) {\n                        this.setState({scene: 'selectSpouse'});\n                      }\n                    });\n                  }}>\n                  {this.state.spouseName}\n                  {!(this.state.spouse && this.state.spouse.length > 0) &&\n                    t('Select')}\n                </span>\n                {this.state.spouse && this.state.spouse && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        spouseName: null,\n                        spouse: null,\n                      });\n                    }}>\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">{t('Exs')}</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.exs && this.state.exs.length > 0\n                      ? ' radio-selected'\n                      : '')\n                  }\n                  onClick={() => {\n                    this.setState({search: ''}, () => {\n                      if (!(this.state.exs && this.state.exs.length > 0)) {\n                        this.setState({scene: 'selectEx'});\n                      }\n                    });\n                  }}>\n                  {this.state.exName}\n                  {!(\n                    (this.state.ex && this.state.exs.length > 0) ||\n                    (this.state.exName && this.state.exName.length > 0)\n                  ) && t('Select')}\n                </span>\n                {this.state.exs && this.state.exs.length > 0 && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        exName: null,\n                        exs: [],\n                      });\n                    }}>\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\"></div>\n              {this.state.mode === 'edit' && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.remove(this.state.id);\n                    }}>\n                    {t('Remove')}\n                  </div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.save();\n                    }}>\n                    {t('Save')}\n                  </div>\n                </div>\n              )}\n              {this.state.mode === 'new' && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.add();\n                    }}>\n                    {t('Add')}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Form = translate('translations')(FormLegacy);\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {I18nextProvider} from 'react-i18next';\n\nimport i18n from './i18n';\n\nimport App from './App';\n\nconst Loader = () => {\n  return <div>Loading...</div>;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n  <I18nextProvider i18n={i18n}>\n    <App />\n  </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}