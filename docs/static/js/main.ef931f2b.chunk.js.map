{"version":3,"sources":["components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Modal","props","handleClose","show","content","className","onClick","prefix","tree","id","type","parents","name","status","gender","spouse","fullName","birthPlace","birthDate","city","contact","Node","state","brand","nodes","this","filter","data","childs","i","includes","push","hasChildren","root","node","exs","length","divorced","j","divorcedRemarried","ex","k","hasChildrenFromExs","setState","map","key","style","display","n","ek","img","width","src","alt","showModal","mode","scene","React","Component","App","componentDidMount","resizeTreeWidth","isNew","setTimeout","window","localStorage","getItem","alert","removeItem","currentTab","document","getElementById","setProperty","offsetWidth","obj","modal","reset","confirm","setItem","location","zoomIn","scale","zoomOut","onSearchChange","e","console","log","target","value","search","import","input","createElement","onchange","file","files","reader","FileReader","readAsText","onload","readerEvent","result","JSON","parse","stringify","err","click","export","jsonStr","pom","setAttribute","encodeURIComponent","Date","toISOString","replace","createEvent","event","initEvent","dispatchEvent","initExport","showModalExport","pdfRef","createRef","pdfWidth","parseInt","pdfHeight","clientHeight","height","color","marginLeft","background","fontSize","paddingLeft","verticalAlign","marginBottom","form","firstParent","secondParent","placeholder","onChange","toLowerCase","indexOf","item","ref","role","aria-label","targetRef","options","orientation","unit","format","filename","toPdf","Form","spouseName","exName","remove","splice","save","add","uuidv4","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef931f2b.chunk.js","sourcesContent":["import React from \"react\";\nfunction Modal(props) {\n  const { handleClose, show, content } = props;\n  if (show) {\n    return (\n      <div className=\"app-modal\">\n        <div className=\"app-modal-content\">\n          {content}\n          <button className=\"app-modal-close-btn\" onClick={handleClose}>\n            &times;\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Modal from \"./components/Modal\";\nimport ExportPDF from \"react-to-pdf\";\n\nconst prefix = process.env.REACT_APP_MODE === \"prod\" ? \"/silsilah\" : \"/\";\n\n// Basic structure\nconst tree = [\n  {\n    id: \"00000000-0000-0000-0000-00000000000\",\n    type: \"root\",\n  },\n  {\n    id: \"d066198b-d26e-4408-b71f-651e6e75d011\",\n    parents: [\"00000000-0000-0000-0000-00000000000\"],\n    type: \"node\",\n    name: \"Father\",\n    status: \"alive\",\n    gender: \"male\",\n    spouse: \"6e66875d-4b6c-4670-bfbe-876e8ced64b1\",\n    fullName: \"Father\",\n    birthPlace: \"Jakarta Pusat\",\n    birthDate: \"19600101\",\n    city: \"Jakarta\",\n    contact: \"+6281234567890\",\n  },\n  {\n    id: \"6e66875d-4b6c-4670-bfbe-876e8ced64b1\",\n    type: \"node\",\n    status: \"deceased\",\n    gender: \"female\",\n    name: \"Mother\",\n    fullName: \"Mother\",\n    birthPlace: \"Jakarta Selatan\",\n    birthDate: \"19700101\",\n    city: \"Jakarta\",\n    contact: \"+6281234567891\",\n  },\n  {\n    id: \"8a6d88a0-285d-4aed-a710-cfbd5f8dc5f6\",\n    parents: [\n      \"d066198b-d26e-4408-b71f-651e6e75d011\",\n      \"6e66875d-4b6c-4670-bfbe-876e8ced64b1\",\n    ],\n    status: \"alive\",\n    type: \"node\",\n    gender: \"male\",\n    name: \"Son\",\n    fullName: \"Son\",\n    birthPlace: \"Jakarta Barat\",\n    birthDate: \"19900101\",\n    city: \"Jakarta\",\n    contact: \"+6281234567892\",\n  },\n  {\n    id: \"14081329-ee06-4f53-8689-c9f716c5e3a2\",\n    parents: [\n      \"d066198b-d26e-4408-b71f-651e6e75d011\",\n      \"6e66875d-4b6c-4670-bfbe-876e8ced64b1\",\n    ],\n    status: \"alive\",\n    type: \"node\",\n    gender: \"female\",\n    name: \"Daughter\",\n    fullName: \"Daughter\",\n    birthPlace: \"Jakarta Timur\",\n    birthDate: \"19900102\",\n    city: \"Jakarta\",\n    contact: \"+6281234567893\",\n  },\n];\n\nclass Node extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: \"Ford\",\n    };\n  }\n  componentDidMount() {\n    let nodes = this.props.tree.filter((data) => {\n      let childs = [];\n      for (let i in this.props.tree) {\n        if (\n          this.props.tree[i].parents &&\n          this.props.tree[i].parents.includes(data.id) &&\n          this.props.tree[i].parents.includes(data.spouse)\n        ) {\n          childs.push(this.props.tree[i]);\n          data.hasChildren = true;\n        }\n      }\n      data.childs = childs;\n      if (\n        data.parents &&\n        data.parents.includes(this.props.parents[0]) &&\n        (this.props.root || data.parents.includes(this.props.parents[1]))\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    for (let i in nodes) {\n      let node = nodes[i];\n      // divorced but not remarried\n      if (node.exs && node.exs.length === 1 && !node.spouse) {\n        nodes[i].spouse = node.exs[0].id;\n        nodes[i].divorced = true;\n      }\n      // divorced but has been remarried\n      if (!node.divorced && node.spouse && node.exs && node.exs.length > 0) {\n        node.divorcedRemarried = true;\n        for (let j in node.exs) {\n          let ex = node.exs[j];\n          for (let k in this.props.tree) {\n            if (\n              node.spouse &&\n              this.props.tree[k].parents &&\n              this.props.tree[k].parents.includes(node.id) &&\n              this.props.tree[k].parents.includes(ex.id)\n            ) {\n              nodes[i].hasChildrenFromExs = true;\n            }\n          }\n        }\n      }\n    }\n    this.setState({ nodes: nodes }, () => {\n      // Do nothing\n    });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.nodes &&\n          this.state.nodes.map((node, key) => {\n            return (\n              <div\n                id={this.props.root ? \"root-family\" : \"\"}\n                className=\"family\"\n                key={key}\n              >\n                {key === this.state.nodes.length - 1 &&\n                  this.state.nodes.length > 1 &&\n                  node.exs && (\n                    <div className={\"sibling-line-right-with-exs\"}></div>\n                  )}\n                {node.divorcedRemarried &&\n                  node.exs &&\n                  node.exs.length > 0 &&\n                  node.exs.map((ex, k) => {\n                    return (\n                      <div style={{ display: \"inline-block\" }} key={k}>\n                        {this.props.tree\n                          .filter((data) => {\n                            return data.id === ex.id;\n                          })\n                          .map((n, ek) => {\n                            return (\n                              <div className=\"family\" key={ek}>\n                                <div\n                                  className={\n                                    \"node\" +\n                                    (n.parents && node.parents.length > 0\n                                      ? \" node-gen\"\n                                      : \"\") +\n                                    (n.status === \"deceased\"\n                                      ? \" node-deceased\"\n                                      : \"\")\n                                  }\n                                  id={n.id}\n                                >\n                                  {n.name}\n                                  {n.img && (\n                                    <img width=\"100\" src={n.img} alt=\"\" />\n                                  )}\n                                </div>\n                                {key === this.state.nodes.length - 1 &&\n                                  this.state.nodes.length > 1 &&\n                                  node.exs &&\n                                  node.exs.length > 0 && (\n                                    <div className={\"marital-line-exs\"}></div>\n                                  )}\n                                {node.hasChildrenFromExs && (\n                                  <div className=\"derivative-line-ex\"></div>\n                                )}\n                                <Node\n                                  tree={this.props.tree}\n                                  parents={[node.id, n.id]}\n                                  showModal={this.props.showModal}\n                                />\n                              </div>\n                            );\n                          })}\n                      </div>\n                    );\n                  })}\n                <div\n                  id={this.props.root ? \"root-family-sub\" : \"\"}\n                  className=\"family\"\n                >\n                  {key === 0 && this.state.nodes.length > 1 && (\n                    <div className={\"sibling-line-left\"}></div>\n                  )}\n                  {key === this.state.nodes.length - 1 &&\n                    this.state.nodes.length > 1 && (\n                      <div\n                        className={\n                          \"sibling-line-right\" +\n                          (node.spouse ? \" sibling-line-right-with-spouse\" : \"\")\n                        }\n                      ></div>\n                    )}\n                  {!(key === 0 || key === this.state.nodes.length - 1) &&\n                    this.state.nodes.length > 1 && (\n                      <div className={\"sibling-line-center\"}></div>\n                    )}\n                  <div\n                    className={\n                      \"node\" +\n                      (node.parents && node.parents.length > 0\n                        ? \" node-gen\"\n                        : \"\") +\n                      (node.status === \"deceased\" ? \" node-deceased\" : \"\")\n                    }\n                    id={node.id}\n                    onClick={() => {\n                      node.mode = \"edit\";\n                      node.scene = \"form\";\n                      this.props.showModal(node);\n                    }}\n                  >\n                    {!this.props.root && (\n                      <div className=\"derivative-line-2\"></div>\n                    )}\n                    {key === 0 &&\n                      this.state.nodes.length > 1 &&\n                      node.spouse && (\n                        <div className=\"sibling-line-left-node\"></div>\n                      )}\n                    {key === this.state.nodes.length - 1 &&\n                      this.state.nodes.length > 1 &&\n                      node.spouse && (\n                        <div className={\"sibling-line-right-node\"}></div>\n                      )}\n                    {node.name}\n                    {node.img && <img width=\"100\" src={node.img} alt=\"\" />}\n                  </div>\n                  {node.spouse && !node.divorced && (\n                    <div className=\"marital-line\"></div>\n                  )}\n                  {node.spouse && node.divorced && (\n                    <div className=\"marital-line-divorced\"></div>\n                  )}\n                  {node.spouse &&\n                    this.props.tree\n                      .filter((data) => {\n                        return data.id === node.spouse;\n                      })\n                      .map((n, k) => {\n                        return (\n                          <div\n                            key={k}\n                            className={\n                              \"node\" +\n                              (n.status === \"deceased\" ? \" node-deceased\" : \"\")\n                            }\n                            onClick={() => {\n                              n.mode = \"edit\";\n                              n.scene = \"form\";\n                              this.props.showModal(n);\n                            }}\n                          >\n                            {n.name}\n                          </div>\n                        );\n                      })}\n                  {node.hasChildren && <div className=\"derivative-line\"></div>}\n                  {node.hasChildren && (\n                    <div>\n                      <Node\n                        tree={this.props.tree}\n                        parents={[node.id, node.spouse]}\n                        showModal={this.props.showModal}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: \"tree\",\n      tree: JSON.parse(window.localStorage.getItem(\"tree\")) || tree,\n      isNew: window.localStorage.getItem(\"tree\") ? false : true,\n      scale: 1.0,\n      showModalExport: false,\n    };\n    this.pdfRef = React.createRef();\n  }\n  componentDidMount = () => {\n    // let familyTree;\n    this.resizeTreeWidth();\n    if (this.state.isNew) {\n      setTimeout(() => {\n        if (!window.localStorage.getItem(\"isReset\")) {\n          alert(\n            \"It seems that you have not created any tree yet. You can continue to edit existing basic tree structure or import your existing JSON file.\"\n          );\n        }\n        window.localStorage.removeItem(\"isReset\");\n      }, 500);\n    }\n  };\n\n  // This help draggable scroll\n  resizeTreeWidth = () => {\n    setTimeout(() => {\n      if (this.state.currentTab === \"tree\") {\n        document\n          .getElementById(\"main-wrapper\")\n          .style.setProperty(\n            \"width\",\n            document.getElementById(\"root-family\").offsetWidth + 100 + \"px\"\n          );\n      }\n    }, 100);\n  };\n\n  showModal = (obj) => {\n    this.setState({ modal: true, node: obj });\n  };\n\n  reset = () => {\n    if (\n      window.confirm(\n        \"You are attempting to reset the tree to the basic tree structure. Please save your work befork dong this. Continue?\"\n      )\n    ) {\n      alert(prefix)\n      window.localStorage.removeItem(\"tree\");\n      window.localStorage.setItem(\"isReset\", \"true\");\n      window.location = prefix;\n    }\n  };\n\n  zoomIn = () => {\n    let scale = this.state.scale;\n    scale += 0.1;\n    if (scale > 1) return;\n    this.setState({ scale: scale }, () => {\n      document\n        .getElementById(\"main-wrapper\")\n        .style.setProperty(\"transform\", \"scale(\" + scale + \")\");\n    });\n  };\n\n  zoomOut = () => {\n    let scale = this.state.scale;\n    scale -= 0.1;\n    this.setState({ scale: scale }, () => {\n      document\n        .getElementById(\"main-wrapper\")\n        .style.setProperty(\"transform\", \"scale(\" + scale + \")\");\n    });\n  };\n\n  onSearchChange = (e) => {\n    console.log(e.target.value);\n    this.setState({ search: e.target.value });\n  };\n\n  // Import data from JSON file\n  import = () => {\n    var input = document.createElement(\"input\");\n    input.type = \"file\";\n\n    input.onchange = (e) => {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (readerEvent) => {\n        var content = readerEvent.target.result;\n        try {\n          let tree = JSON.parse(content);\n          window.localStorage.setItem(\"tree\", JSON.stringify(tree));\n          window.location = prefix;\n        } catch (err) {\n          alert(err);\n        }\n      };\n    };\n    input.click();\n  };\n\n  // Export data to JSON file\n  export = () => {\n    let jsonStr = JSON.stringify(this.state.tree);\n    var pom = document.createElement(\"a\");\n    pom.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(jsonStr)\n    );\n    pom.setAttribute(\n      \"download\",\n      \"lineage-\" + new Date().toISOString().replace(/:/g, \"-\") + \".json\"\n    );\n\n    if (document.createEvent) {\n      var event = document.createEvent(\"MouseEvents\");\n      event.initEvent(\"click\", true, true);\n      pom.dispatchEvent(event);\n    } else {\n      pom.click();\n    }\n  };\n\n  initExport = () => {\n    this.setState({\n      showModalExport: true,\n    });\n  };\n\n  render() {\n    const pdfWidth = window.document.getElementById(\"main-wrapper\")\n      ? parseInt(window.document.getElementById(\"main-wrapper\").style.width)\n      : 0;\n    const pdfHeight = window.document.getElementById(\"main-wrapper\")\n      ? parseInt(window.document.getElementById(\"main-wrapper\").clientHeight)\n      : 0;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <div style={{ height: 23 }}>&nbsp;</div>\n          <div>\n            <div\n              className={\n                \"main-menu-item\" +\n                (this.state.currentTab === \"list\"\n                  ? \" main-menu-item-selected\"\n                  : \"\")\n              }\n              onClick={() => {\n                console.log(JSON.stringify(this.state.node));\n                window.localStorage.setItem(\n                  \"tree\",\n                  JSON.stringify(this.state.tree)\n                );\n                this.setState({ currentTab: \"list\" });\n              }}\n            >\n              List\n            </div>\n            <div\n              className={\n                \"main-menu-item\" +\n                (this.state.currentTab === \"tree\"\n                  ? \" main-menu-item-selected\"\n                  : \"\")\n              }\n              onClick={() => {\n                if (this.state.currentTab === \"tree\") return;\n                window.location = prefix;\n              }}\n            >\n              Tree\n            </div>\n          </div>\n          <div className=\"tools\">\n            <button onClick={this.import}>Import</button>&nbsp;&nbsp;\n            <button onClick={this.initExport}>Export</button>&nbsp;&nbsp;\n            <button onClick={this.reset}>Reset</button>&nbsp;&nbsp;\n            {this.state.currentTab === \"tree\" && (\n              <div style={{ display: \"inline-block\", color: \"grey\" }}>\n                <button onClick={this.zoomIn}>Zoom in</button>&nbsp;&nbsp;\n                <button onClick={this.zoomOut}>Zoom out</button>\n                {/* Legenda*/}\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: \"blue\",\n                    display: \"inline-block\",\n                  }}\n                ></div>\n                <span style={{ fontSize: 12, paddingLeft: 5 }}>\n                  Original derivatives\n                </span>\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: \"green\",\n                    display: \"inline-block\",\n                  }}\n                ></div>\n                <span style={{ fontSize: 12, paddingLeft: 5 }}>Outsider</span>\n                <div\n                  style={{\n                    marginLeft: 10,\n                    width: 15,\n                    height: 3,\n                    background: \"red\",\n                    display: \"inline-block\",\n                  }}\n                ></div>\n                <span style={{ fontSize: 12, paddingLeft: 5 }}>Divorced</span>\n                <div\n                  style={{\n                    verticalAlign: \"bottom\",\n                    marginBottom: 2,\n                    marginLeft: 10,\n                    width: 15,\n                    height: 15,\n                    background: \"grey\",\n                    display: \"inline-block\",\n                  }}\n                ></div>\n                <span style={{ fontSize: 12, paddingLeft: 5 }}>Deceased</span>\n              </div>\n            )}\n          </div>\n        </div>\n        {/* List */}\n        {this.state.currentTab === \"list\" && (\n          <div className=\"family-list\">\n            <div className=\"family-list-sidebar\">\n              <div>\n                <div className=\"family-list-buttons\">\n                  <div\n                    className=\"family-list-button\"\n                    onClick={() => {\n                      this.setState({ form: false }, () => {\n                        this.setState({\n                          form: true,\n                          node: {\n                            name: \"\",\n                            fullName: \"\",\n                            birthPlace: \"\",\n                            birthDate: \"\",\n                            city: \"\",\n                            contact: \"\",\n                            gender: \"male\",\n                            status: \"alive\",\n                            firstParent: \"\",\n                            secondParent: \"\",\n                            exs: [],\n                            mode: \"new\",\n                          },\n                        });\n                      });\n                    }}\n                  >\n                    Add\n                  </div>\n                </div>\n                <input\n                  placeholder=\"Search...\"\n                  className=\"search-box\"\n                  type=\"text\"\n                  onChange={this.onSearchChange}\n                />\n              </div>\n              <div className=\"family-list-items\">\n                {this.state.tree\n                  .filter((data) => {\n                    if (\n                      data.id === \"00000000-0000-0000-0000-00000000000\" ||\n                      data.id === \"0\"\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className={\n                          \"family-list-item\" +\n                          (this.state.node && this.state.node.id === item.id\n                            ? \" family-list-item-selected\"\n                            : \"\")\n                        }\n                        onClick={() => {\n                          let node = item;\n                          node.mode = \"edit\";\n                          this.setState({ form: false }, () => {\n                            this.setState({ form: true, node: node });\n                          });\n                        }}\n                      >\n                        {item.name}\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n            {this.state.form && (\n              <div className=\"family-list-content\">\n                <Form tree={this.state.tree} node={this.state.node} />\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Tree */}\n        {this.state.currentTab === \"tree\" && (\n          <div className=\"family-tree\">\n            {/* Family tree */}\n            <div className=\"dragscroll\">\n              <div id=\"main-wrapper\" ref={this.pdfRef}>\n                <Node\n                  tree={this.state.tree}\n                  parents={[this.state.tree[0].id]}\n                  root={true}\n                  showModal={this.showModal}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Modal */}\n        {this.state.modal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <div className=\"close-container\">\n                <div\n                  className=\"close\"\n                  onClick={() => {\n                    this.setState({ modal: false, node: {} });\n                  }}\n                >\n                  <span role=\"img\" aria-label=\"\">\n                    &#10060;{\" \"}\n                  </span>\n                </div>\n              </div>\n              <Form tree={this.state.tree} node={this.state.node} />\n            </div>\n          </div>\n        )}\n        <Modal\n          show={this.state.showModalExport}\n          handleClose={() => {\n            this.setState({ showModalExport: false });\n          }}\n          content={\n            <div>\n              <h4>Export</h4>\n              <button onClick={this.export}>Export to JSON</button>\n              &nbsp;\n              <ExportPDF\n                targetRef={this.pdfRef}\n                options={{\n                  orientation: \"landscapce\",\n                  unit: \"px\",\n                  format: [pdfWidth, pdfHeight],\n                }}\n                filename={\n                  \"lineage-\" +\n                  new Date().toISOString().replace(/:/g, \"-\") +\n                  \".pdf\"\n                }\n              >\n                {({ toPdf }) => <button onClick={toPdf}>Export to PDF</button>}\n              </ExportPDF>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scene: \"form\",\n    };\n  }\n  componentDidMount = () => {\n    let obj = JSON.parse(JSON.stringify(this.props.node));\n    // Parse parent\n    if (obj.parents && obj.parents[0]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[0]) {\n          obj.firstParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    if (obj.parents && obj.parents[1]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[1]) {\n          obj.secondParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse spouse\n    if (obj.spouse && obj.spouse.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.spouse) {\n          obj.spouseName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse exs\n    if (obj.exs && obj.exs.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.exs[0].id) {\n          obj.exName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    this.setState(obj);\n  };\n  onChange = (e) => {\n    if (e && e.target && e.target.name && e.target.value) {\n      let obj = {};\n      obj[e.target.name] = e.target.value;\n      this.setState(obj);\n    }\n  };\n\n  remove = () => {\n    this.setState({ search: null });\n    let tree = this.props.tree;\n    for (let i in tree) {\n      console.log(tree[i]);\n      if (tree[i].id === this.state.id) {\n        tree.splice(i, 1);\n        break;\n      }\n    }\n    window.localStorage.setItem(\"tree\", JSON.stringify(tree));\n    window.location = prefix;\n  };\n  save = () => {\n    this.setState({ search: null });\n    let tree = this.props.tree;\n    for (let i in tree) {\n      if (tree[i].id === this.state.id) {\n        tree[i] = {\n          id: this.state.id,\n          name: this.state.name,\n          fullName: this.state.fullName,\n          birthPlace: this.state.birthPlace,\n          birthDate: this.state.birthDate,\n          city: this.state.city,\n          contact: this.state.contact,\n          gender: this.state.gender,\n          status: this.state.status,\n          firstParent: this.state.firstParent,\n          secondParent: this.state.secondParent,\n          parents: this.state.parents,\n          spouse: this.state.spouse,\n          exs: this.state.exs || [],\n        };\n        console.log(tree[i]);\n        break;\n      }\n    }\n    window.localStorage.setItem(\"tree\", JSON.stringify(tree));\n    window.location = prefix;\n  };\n  add = () => {\n    this.setState({ search: null });\n    let tree = this.props.tree;\n    tree.push({\n      id: uuidv4(),\n      name: this.state.name,\n      fullName: this.state.fullName,\n      birthPlace: this.state.birthPlace,\n      birthDate: this.state.birthDate,\n      city: this.state.city,\n      contact: this.state.contact,\n      gender: this.state.gender,\n      status: this.state.status,\n      firstParent: this.state.firstParent,\n      secondParent: this.state.secondParent,\n      parents: this.state.parents,\n      spouse: this.state.spouse,\n      exs: this.state.exs || [],\n    });\n    window.localStorage.setItem(\"tree\", JSON.stringify(tree));\n    window.location = prefix;\n  };\n  onSearchChange = (e) => {\n    console.log(e.target.value);\n    this.setState({ search: e.target.value });\n  };\n  render() {\n    return (\n      <div>\n        {this.state.scene === \"selectParent\" && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({ scene: \"form\" });\n              }}\n            >\n              <span role=\"img\" aria-label=\"\">\n                &#10060;{\" \"}\n              </span>\n            </div>\n            <div className=\"select-for-label\">\n              Select parent for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter((data) => {\n                    if (\n                      data.id === \"00000000-0000-0000-0000-00000000000\" ||\n                      data.id === \"0\"\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          let parents = this.state.parents || [];\n                          console.log(parents);\n                          if (parents && parents.length === 0) {\n                            parents.push(node.id);\n                            this.setState({\n                              firstParent: node.name,\n                              parents: parents,\n                              scene: \"form\",\n                            });\n                          } else if (parents) {\n                            parents.push(node.id);\n                            this.setState({\n                              secondParent: node.name,\n                              parents: parents,\n                              scene: \"form\",\n                            });\n                          }\n                        }}\n                      >\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === \"selectSpouse\" && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({ scene: \"form\" });\n              }}\n            >\n              <span role=\"img\" aria-label=\"\">\n                &#10060;{\" \"}\n              </span>\n            </div>\n            <div className=\"select-for-label\">\n              Select spouse for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter((data) => {\n                    if (\n                      data.id === \"00000000-0000-0000-0000-00000000000\" ||\n                      data.id === \"0\"\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            spouseName: node.name,\n                            spouse: node.id,\n                            scene: \"form\",\n                          });\n                        }}\n                      >\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === \"selectEx\" && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({ scene: \"form\" });\n              }}\n            >\n              <span role=\"img\" aria-label=\"\">\n                &#10060;{\" \"}\n              </span>\n            </div>\n            <div className=\"select-for-label\">\n              Select ex for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter((data) => {\n                    if (\n                      data.id === \"00000000-0000-0000-0000-00000000000\" ||\n                      data.id === \"0\"\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            exName: node.name,\n                            exs: [{ id: node.id }],\n                            scene: \"form\",\n                          });\n                        }}\n                      >\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === \"form\" && (\n          <div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Name</div>\n              <input\n                name=\"name\"\n                placeholder=\"Name\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Full name</div>\n              <input\n                name=\"fullName\"\n                placeholder=\"Full name\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.fullName}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Birth place</div>\n              <input\n                name=\"birthPlace\"\n                placeholder=\"Birth place\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthPlace}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Birth date</div>\n              <input\n                name=\"birthDate\"\n                placeholder=\"Birth date\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthDate}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">City</div>\n              <input\n                name=\"city\"\n                placeholder=\"City\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.city}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Contact</div>\n              <input\n                name=\"contact\"\n                placeholder=\"Contact\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.contact}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Gender</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.gender === \"male\" ? \" radio-selected\" : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ gender: \"male\" });\n                  }}\n                >\n                  Male\n                </span>\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.gender === \"female\" ? \" radio-selected\" : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ gender: \"female\" });\n                  }}\n                >\n                  Female\n                </span>\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.gender === \"other\" ? \" radio-selected\" : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ gender: \"other\" });\n                  }}\n                >\n                  Other\n                </span>\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Status</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.status === \"alive\" ? \" radio-selected\" : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ status: \"alive\" });\n                  }}\n                >\n                  Alive\n                </span>\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.status === \"deceased\" ? \" radio-selected\" : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ status: \"deceased\" });\n                  }}\n                >\n                  Deceased\n                </span>\n              </div>\n            </div>\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                \"00000000-0000-0000-0000-00000000000\" ||\n                this.state.parents[0] === \"0\")\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">1st Parent</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      \"radio\" +\n                      (this.state.parents && this.state.parents[0]\n                        ? \" radio-selected\"\n                        : \"\")\n                    }\n                    onClick={() => {\n                      this.setState({ search: \"\" }, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[0] &&\n                            this.state.firstParent\n                          )\n                        ) {\n                          this.setState({ scene: \"selectParent\" });\n                        }\n                      });\n                    }}\n                  >\n                    {this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent\n                    ) && \"Select\"}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[0] &&\n                    this.state.firstParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          if (\n                            this.state.parents &&\n                            this.state.parents.length > 1\n                          ) {\n                            let parents = this.state.parents;\n                            parents = [this.state.parents[1]];\n                            let firstParent = this.state.secondParent;\n                            this.setState({\n                              parents: parents,\n                              firstParent: firstParent,\n                              secondParent: null,\n                            });\n                          } else {\n                            let parents = [];\n                            this.setState({\n                              parents: parents,\n                              firstParent: null,\n                              secondParent: null,\n                            });\n                          }\n                        }}\n                      >\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                \"00000000-0000-0000-0000-00000000000\" ||\n                this.state.parents[0] === \"0\")\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">2nd Parent</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      \"radio\" +\n                      (this.state.parents && this.state.parents[1]\n                        ? \" radio-selected\"\n                        : \"\")\n                    }\n                    onClick={() => {\n                      this.setState({ search: \"\" }, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[1] &&\n                            this.state.secondParent\n                          )\n                        ) {\n                          this.setState({ scene: \"selectParent\" });\n                        }\n                      });\n                    }}\n                  >\n                    {this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent\n                    ) && \"Select\"}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[1] &&\n                    this.state.secondParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          let parents = [this.state.parents[0]];\n                          this.setState({\n                            parents: parents,\n                            secondParent: null,\n                          });\n                        }}\n                      >\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Spouse</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.spouse && this.state.spouse.length > 0\n                      ? \" radio-selected\"\n                      : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ search: \"\" }, () => {\n                      if (!this.state.spouse) {\n                        this.setState({ scene: \"selectSpouse\" });\n                      }\n                    });\n                  }}\n                >\n                  {this.state.spouseName}\n                  {!(this.state.spouse && this.state.spouse.length > 0) &&\n                    \"Select\"}\n                </span>\n                {this.state.spouse && this.state.spouse && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        spouseName: null,\n                        spouse: null,\n                      });\n                    }}\n                  >\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Ex</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    \"radio\" +\n                    (this.state.exs && this.state.exs.length > 0\n                      ? \" radio-selected\"\n                      : \"\")\n                  }\n                  onClick={() => {\n                    this.setState({ search: \"\" }, () => {\n                      if (!(this.state.exs && this.state.exs.length > 0)) {\n                        this.setState({ scene: \"selectEx\" });\n                      }\n                    });\n                  }}\n                >\n                  {this.state.exName}\n                  {!(\n                    (this.state.ex && this.state.exs.length > 0) ||\n                    (this.state.exName && this.state.exName.length > 0)\n                  ) && \"Select\"}\n                </span>\n                {this.state.exs && this.state.exs.length > 0 && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        exName: null,\n                        exs: [],\n                      });\n                    }}\n                  >\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\"></div>\n              {this.state.mode === \"edit\" && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.remove(this.state.id);\n                    }}\n                  >\n                    Remove\n                  </div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.save();\n                    }}\n                  >\n                    Save\n                  </div>\n                </div>\n              )}\n              {this.state.mode === \"new\" && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.add();\n                    }}\n                  >\n                    Add\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}