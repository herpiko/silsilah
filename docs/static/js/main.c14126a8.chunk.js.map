{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","prefix","tree","id","type","parents","name","status","gender","spouse","fullName","birthPlace","birthDate","city","contact","Node","props","state","brand","nodes","this","filter","data","childs","i","includes","push","hasChildren","root","node","exs","length","divorced","j","divorcedRemarried","ex","k","hasChildrenFromExs","setState","map","key","className","style","display","n","ek","img","width","src","showModal","onClick","mode","scene","React","Component","App","componentDidMount","resizeTreeWidth","isNew","setTimeout","window","localStorage","getItem","alert","removeItem","currentTab","document","getElementById","setProperty","offsetWidth","obj","modal","reset","confirm","setItem","location","zoomIn","scale","zoomOut","onSearchChange","e","console","log","target","value","search","import","input","createElement","onchange","file","files","reader","FileReader","readAsText","onload","readerEvent","content","result","JSON","parse","stringify","err","click","export","jsonStr","pom","setAttribute","encodeURIComponent","Date","toISOString","replace","createEvent","event","initEvent","dispatchEvent","height","color","marginLeft","background","fontSize","paddingLeft","verticalAlign","marginBottom","form","firstParent","secondParent","placeholder","onChange","toLowerCase","indexOf","item","Form","spouseName","exName","remove","splice","save","add","uuidv4","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c14126a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport {v4 as uuidv4} from 'uuid';\nimport './App.css';\n\nconst prefix = '/silsilah';\n\n// Basic structure\nconst tree = [\n  {\n    id: '00000000-0000-0000-0000-00000000000',\n    type: 'root',\n  },\n  {\n    id: 'd066198b-d26e-4408-b71f-651e6e75d011',\n    parents: ['00000000-0000-0000-0000-00000000000'],\n    type: 'node',\n    name: 'Father',\n    status: 'alive',\n    gender: 'male',\n    spouse: '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    fullName: 'Father',\n    birthPlace: 'Jakarta Pusat',\n    birthDate: '19600101',\n    city: 'Jakarta',\n    contact: '+6281234567890',\n  },\n  {\n    id: '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    type: 'node',\n    status: 'deceased',\n    gender: 'female',\n    name: 'Mother',\n    fullName: 'Mother',\n    birthPlace: 'Jakarta Selatan',\n    birthDate: '19700101',\n    city: 'Jakarta',\n    contact: '+6281234567891',\n  },\n  {\n    id: '8a6d88a0-285d-4aed-a710-cfbd5f8dc5f6',\n    parents: [\n      'd066198b-d26e-4408-b71f-651e6e75d011',\n      '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    ],\n    status: 'alive',\n    type: 'node',\n    gender: 'male',\n    name: 'Son',\n    fullName: 'Son',\n    birthPlace: 'Jakarta Barat',\n    birthDate: '19900101',\n    city: 'Jakarta',\n    contact: '+6281234567892',\n  },\n  {\n    id: '14081329-ee06-4f53-8689-c9f716c5e3a2',\n    parents: [\n      'd066198b-d26e-4408-b71f-651e6e75d011',\n      '6e66875d-4b6c-4670-bfbe-876e8ced64b1',\n    ],\n    status: 'alive',\n    type: 'node',\n    gender: 'female',\n    name: 'Daughter',\n    fullName: 'Daughter',\n    birthPlace: 'Jakarta Timur',\n    birthDate: '19900102',\n    city: 'Jakarta',\n    contact: '+6281234567893',\n  },\n];\n\nclass Node extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {brand: 'Ford'};\n  }\n  componentDidMount() {\n    let nodes = this.props.tree.filter(data => {\n      let childs = [];\n      for (let i in this.props.tree) {\n        if (\n          this.props.tree[i].parents &&\n          this.props.tree[i].parents.includes(data.id) &&\n          this.props.tree[i].parents.includes(data.spouse)\n        ) {\n          childs.push(this.props.tree[i]);\n          data.hasChildren = true;\n        }\n      }\n      data.childs = childs;\n      if (\n        data.parents &&\n        data.parents.includes(this.props.parents[0]) &&\n        (this.props.root || data.parents.includes(this.props.parents[1]))\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    for (let i in nodes) {\n      let node = nodes[i];\n      // divorced but not remarried\n      if (node.exs && node.exs.length === 1 && !node.spouse) {\n        nodes[i].spouse = node.exs[0].id;\n        nodes[i].divorced = true;\n      }\n      // divorced but has been remarried\n      if (!node.divorced && node.spouse && node.exs && node.exs.length > 0) {\n        node.divorcedRemarried = true;\n        for (let j in node.exs) {\n          let ex = node.exs[j];\n          for (let k in this.props.tree) {\n            if (\n              node.spouse &&\n              this.props.tree[k].parents &&\n              this.props.tree[k].parents.includes(node.id) &&\n              this.props.tree[k].parents.includes(ex.id)\n            ) {\n              nodes[i].hasChildrenFromExs = true;\n            }\n          }\n        }\n      }\n    }\n    this.setState({nodes: nodes}, () => {\n      // Do nothing\n    });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.nodes &&\n          this.state.nodes.map((node, key) => {\n            return (\n              <div\n                id={this.props.root ? 'root-family' : ''}\n                className=\"family\"\n                key={key}>\n                {key == this.state.nodes.length - 1 &&\n                  this.state.nodes.length > 1 &&\n                  node.exs && (\n                    <div className={'sibling-line-right-with-exs'}></div>\n                  )}\n                {node.divorcedRemarried &&\n                  node.exs &&\n                  node.exs.length > 0 &&\n                  node.exs.map((ex, k) => {\n                    return (\n                      <div style={{display: 'inline-block'}} key={k}>\n                        {this.props.tree\n                          .filter(data => {\n                            return data.id == ex.id;\n                          })\n                          .map((n, ek) => {\n                            return (\n                              <div className=\"family\" key={ek}>\n                                <div\n                                  className={\n                                    'node' +\n                                    (n.parents && node.parents.length > 0\n                                      ? ' node-gen'\n                                      : '') +\n                                    (n.status === 'deceased'\n                                      ? ' node-deceased'\n                                      : '')\n                                  }\n                                  id={n.id}>\n                                  {n.name}\n                                  {n.img && <img width=\"100\" src={n.img} />}\n                                </div>\n                                {key == this.state.nodes.length - 1 &&\n                                  this.state.nodes.length > 1 &&\n                                  node.exs &&\n                                  node.exs.length > 0 && (\n                                    <div className={'marital-line-exs'}></div>\n                                  )}\n                                {node.hasChildrenFromExs && (\n                                  <div className=\"derivative-line-ex\"></div>\n                                )}\n                                <Node\n                                  tree={this.props.tree}\n                                  parents={[node.id, n.id]}\n                                  showModal={this.props.showModal}\n                                />\n                              </div>\n                            );\n                          })}\n                      </div>\n                    );\n                  })}\n                <div\n                  id={this.props.root ? 'root-family-sub' : ''}\n                  className=\"family\">\n                  {key == 0 && this.state.nodes.length > 1 && (\n                    <div className={'sibling-line-left'}></div>\n                  )}\n                  {key == this.state.nodes.length - 1 &&\n                    this.state.nodes.length > 1 && (\n                      <div\n                        className={\n                          'sibling-line-right' +\n                          (node.spouse ? ' sibling-line-right-with-spouse' : '')\n                        }></div>\n                    )}\n                  {!(key == 0 || key == this.state.nodes.length - 1) &&\n                    this.state.nodes.length > 1 && (\n                      <div className={'sibling-line-center'}></div>\n                    )}\n                  <div\n                    className={\n                      'node' +\n                      (node.parents && node.parents.length > 0\n                        ? ' node-gen'\n                        : '') +\n                      (node.status === 'deceased' ? ' node-deceased' : '')\n                    }\n                    id={node.id}\n                    onClick={() => {\n                      node.mode = 'edit';\n                      node.scene = 'form';\n                      this.props.showModal(node);\n                    }}>\n                    {!this.props.root && (\n                      <div className=\"derivative-line-2\"></div>\n                    )}\n                    {key == 0 && this.state.nodes.length > 1 && node.spouse && (\n                      <div className=\"sibling-line-left-node\"></div>\n                    )}\n                    {key == this.state.nodes.length - 1 &&\n                      this.state.nodes.length > 1 &&\n                      node.spouse && (\n                        <div className={'sibling-line-right-node'}></div>\n                      )}\n                    {node.name}\n                    {node.img && <img width=\"100\" src={node.img} />}\n                  </div>\n                  {node.spouse && !node.divorced && (\n                    <div className=\"marital-line\"></div>\n                  )}\n                  {node.spouse && node.divorced && (\n                    <div className=\"marital-line-divorced\"></div>\n                  )}\n                  {node.spouse &&\n                    this.props.tree\n                      .filter(data => {\n                        return data.id == node.spouse;\n                      })\n                      .map((n, k) => {\n                        return (\n                          <div\n                            key={k}\n                            className={\n                              'node' +\n                              (n.status === 'deceased' ? ' node-deceased' : '')\n                            }\n                            onClick={() => {\n                              n.mode = 'edit';\n                              n.scene = 'form';\n                              this.props.showModal(n);\n                            }}>\n                            {n.name}\n                          </div>\n                        );\n                      })}\n                  {node.hasChildren && <div className=\"derivative-line\"></div>}\n                  {node.hasChildren && (\n                    <div>\n                      <Node\n                        tree={this.props.tree}\n                        parents={[node.id, node.spouse]}\n                        showModal={this.props.showModal}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 'tree',\n      tree: JSON.parse(window.localStorage.getItem('tree')) || tree,\n      isNew: window.localStorage.getItem('tree') ? false : true,\n      scale: 1.0,\n    };\n  }\n  componentDidMount = () => {\n    let familyTree;\n    this.resizeTreeWidth();\n    if (this.state.isNew) {\n      setTimeout(() => {\n        if (!window.localStorage.getItem('isReset')) {\n          alert(\n            'It seems that you have not created any tree yet. You can continue to edit existing basic tree structure or import your existing JSON file.',\n          );\n        }\n        window.localStorage.removeItem('isReset');\n      }, 500);\n    }\n  };\n\n  // This help draggable scroll\n  resizeTreeWidth = () => {\n    setTimeout(() => {\n      if (this.state.currentTab === 'tree') {\n        document\n          .getElementById('main-wrapper')\n          .style.setProperty(\n            'width',\n            document.getElementById('root-family').offsetWidth + 100 + 'px',\n          );\n      }\n    }, 100);\n  };\n\n  showModal = obj => {\n    this.setState({modal: true, node: obj});\n  };\n\n  reset = () => {\n    if (\n      window.confirm(\n        'You are attempting to reset the tree to the basic tree structure. Please save your work befork dong this. Continue?',\n      )\n    ) {\n      window.localStorage.removeItem('tree');\n      window.localStorage.setItem('isReset', 'true');\n      window.location = prefix;\n    }\n  };\n\n  zoomIn = () => {\n    let scale = this.state.scale;\n    scale += 0.1;\n    if (scale > 1) return;\n    this.setState({scale: scale}, () => {\n      document\n        .getElementById('main-wrapper')\n        .style.setProperty('transform', 'scale(' + scale + ')');\n    });\n  };\n\n  zoomOut = () => {\n    let scale = this.state.scale;\n    scale -= 0.1;\n    this.setState({scale: scale}, () => {\n      document\n        .getElementById('main-wrapper')\n        .style.setProperty('transform', 'scale(' + scale + ')');\n    });\n  };\n\n  onSearchChange = e => {\n    console.log(e.target.value);\n    this.setState({search: e.target.value});\n  };\n\n  // Import data from JSON file\n  import = () => {\n    var input = document.createElement('input');\n    input.type = 'file';\n\n    input.onchange = e => {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      reader.readAsText(file, 'UTF-8');\n      reader.onload = readerEvent => {\n        var content = readerEvent.target.result;\n        try {\n          let tree = JSON.parse(content);\n          window.localStorage.setItem('tree', JSON.stringify(tree));\n          window.location = prefix;\n        } catch (err) {\n          alert(err);\n        }\n      };\n    };\n    input.click();\n  };\n\n  // Export data to JSON file\n  export = () => {\n    let jsonStr = JSON.stringify(this.state.tree);\n    var pom = document.createElement('a');\n    pom.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(jsonStr),\n    );\n    pom.setAttribute(\n      'download',\n      'lineage-' + new Date().toISOString().replace(/:/g, '-') + '.json',\n    );\n\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      pom.dispatchEvent(event);\n    } else {\n      pom.click();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <div style={{height: 23}}>&nbsp;</div>\n          <div>\n            <div\n              className={\n                'main-menu-item' +\n                (this.state.currentTab === 'list'\n                  ? ' main-menu-item-selected'\n                  : '')\n              }\n              onClick={() => {\n                console.log(JSON.stringify(this.state.node));\n                window.localStorage.setItem(\n                  'tree',\n                  JSON.stringify(this.state.tree),\n                );\n                this.setState({currentTab: 'list'});\n              }}>\n              List\n            </div>\n            <div\n              className={\n                'main-menu-item' +\n                (this.state.currentTab === 'tree'\n                  ? ' main-menu-item-selected'\n                  : '')\n              }\n              onClick={() => {\n                if (this.state.currentTab === 'tree') return;\n                window.location = prefix;\n              }}>\n              Tree\n            </div>\n          </div>\n            <div className=\"tools\">\n              <button onClick={this.import}>Import</button>&nbsp;&nbsp;\n              <button onClick={this.export}>Export</button>&nbsp;&nbsp;\n              <button onClick={this.reset}>Reset</button>&nbsp;&nbsp;\n              {this.state.currentTab === 'tree' &&\n              <div style={{display:'inline-block', color:'grey'}}>\n              <button onClick={this.zoomIn}>Zoom in</button>&nbsp;&nbsp;\n              <button onClick={this.zoomOut}>Zoom out</button>\n              {/* Legenda*/}\n              <div\n                style={{\n                  marginLeft: 10,\n                  width: 15,\n                  height: 3,\n                  background: 'blue',\n                  display: 'inline-block',\n                }}></div>\n              <span style={{fontSize: 12, paddingLeft: 5}}>\n                Original derivatives\n              </span>\n              <div\n                style={{\n                  marginLeft: 10,\n                  width: 15,\n                  height: 3,\n                  background: 'green',\n                  display: 'inline-block',\n                }}></div>\n              <span style={{fontSize: 12, paddingLeft: 5}}>Outsider</span>\n              <div\n                style={{\n                  marginLeft: 10,\n                  width: 15,\n                  height: 3,\n                  background: 'red',\n                  display: 'inline-block',\n                }}></div>\n              <span style={{fontSize: 12, paddingLeft: 5}}>Divorced</span>\n              <div\n                style={{\n                  verticalAlign:'bottom',\n                  marginBottom:2,\n                  marginLeft: 10,\n                  width: 15,\n                  height: 15,\n                  background: 'grey',\n                  display: 'inline-block',\n                }}></div>\n              <span style={{fontSize: 12, paddingLeft: 5}}>Deceased</span>\n              </div>\n              }\n            </div>\n        </div>\n        {/* List */}\n        {this.state.currentTab === 'list' && (\n          <div className=\"family-list\">\n            <div className=\"family-list-sidebar\">\n              <div>\n                <div className=\"family-list-buttons\">\n                  <div\n                    className=\"family-list-button\"\n                    onClick={() => {\n                      this.setState({form: false}, () => {\n                        this.setState({\n                          form: true,\n                          node: {\n                            name: '',\n                            fullName: '',\n                            birthPlace: '',\n                            birthDate: '',\n                            city: '',\n                            contact: '',\n                            gender: 'male',\n                            status: 'alive',\n                            firstParent: '',\n                            secondParent: '',\n                            exs: [],\n                            mode: 'new',\n                          },\n                        });\n                      });\n                    }}>\n                    Add\n                  </div>\n                </div>\n                <input\n                  placeholder=\"Search...\"\n                  className=\"search-box\"\n                  type=\"text\"\n                  onChange={this.onSearchChange}\n                />\n              </div>\n              <div className=\"family-list-items\">\n                {this.state.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className={\n                          'family-list-item' +\n                          (this.state.node && this.state.node.id === item.id\n                            ? ' family-list-item-selected'\n                            : '')\n                        }\n                        onClick={() => {\n                          let node = item;\n                          node.mode = 'edit';\n                          this.setState({form: false}, () => {\n                            this.setState({form: true, node: node});\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n            {this.state.form && (\n              <div className=\"family-list-content\">\n                <Form tree={this.state.tree} node={this.state.node} />\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Tree */}\n        {this.state.currentTab === 'tree' && (\n          <div className=\"family-tree\">\n            {/* Family tree */}\n            <div className=\"dragscroll\">\n              <div id=\"main-wrapper\">\n                <Node\n                  tree={this.state.tree}\n                  parents={[this.state.tree[0].id]}\n                  root={true}\n                  showModal={this.showModal}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Modal */}\n        {this.state.modal && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <div className=\"close-container\">\n                <div\n                  className=\"close\"\n                  onClick={() => {\n                    this.setState({modal: false, node: {}});\n                  }}>\n                  &#10060;{' '}\n                </div>\n              </div>\n              <Form tree={this.state.tree} node={this.state.node} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scene: 'form',\n    };\n  }\n  componentDidMount = () => {\n    let obj = JSON.parse(JSON.stringify(this.props.node));\n    // Parse parent\n    if (obj.parents && obj.parents[0]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[0]) {\n          obj.firstParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    if (obj.parents && obj.parents[1]) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.parents[1]) {\n          obj.secondParent = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse spouse\n    if (obj.spouse && obj.spouse.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.spouse) {\n          obj.spouseName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    // Parse exs\n    if (obj.exs && obj.exs.length > 0) {\n      for (let i in this.props.tree) {\n        if (this.props.tree[i].id === obj.exs[0].id) {\n          obj.exName = this.props.tree[i].name;\n          break;\n        }\n      }\n    }\n    this.setState(obj);\n  };\n  onChange = e => {\n    if (e && e.target && e.target.name && e.target.value) {\n      let obj = {};\n      obj[e.target.name] = e.target.value;\n      this.setState(obj);\n    }\n  };\n\n  remove = () => {\n    this.setState({search: null});\n    let tree = this.props.tree;\n    for (let i in tree) {\n      console.log(tree[i]);\n      if (tree[i].id === this.state.id) {\n        tree.splice(i, 1);\n        break;\n      }\n    }\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  save = () => {\n    this.setState({search: null});\n    let tree = this.props.tree;\n    for (let i in tree) {\n      if (tree[i].id === this.state.id) {\n        tree[i] = {\n          id: this.state.id,\n          name: this.state.name,\n          fullName: this.state.fullName,\n          birthPlace: this.state.birthPlace,\n          birthDate: this.state.birthDate,\n          city: this.state.city,\n          contact: this.state.contact,\n          gender: this.state.gender,\n          status: this.state.status,\n          firstParent: this.state.firstParent,\n          secondParent: this.state.secondParent,\n          parents: this.state.parents,\n          spouse: this.state.spouse,\n          exs: this.state.exs || [],\n        };\n        console.log(tree[i]);\n        break;\n      }\n    }\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  add = () => {\n    this.setState({search: null});\n    let tree = this.props.tree;\n    tree.push({\n      id: uuidv4(),\n      name: this.state.name,\n      fullName: this.state.fullName,\n      birthPlace: this.state.birthPlace,\n      birthDate: this.state.birthDate,\n      city: this.state.city,\n      contact: this.state.contact,\n      gender: this.state.gender,\n      status: this.state.status,\n      firstParent: this.state.firstParent,\n      secondParent: this.state.secondParent,\n      parents: this.state.parents,\n      spouse: this.state.spouse,\n      exs: this.state.exs || [],\n    });\n    window.localStorage.setItem('tree', JSON.stringify(tree));\n    window.location = prefix;\n  };\n  onSearchChange = e => {\n    console.log(e.target.value);\n    this.setState({search: e.target.value});\n  };\n  render() {\n    return (\n      <div>\n        {this.state.scene === 'selectParent' && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({scene: 'form'});\n              }}>\n              &#10060;{' '}\n            </div>\n            <div className=\"select-for-label\">\n              Select parent for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          let parents = this.state.parents || [];\n                          console.log(parents);\n                          if (parents && parents.length === 0) {\n                            parents.push(node.id);\n                            this.setState({\n                              firstParent: node.name,\n                              parents: parents,\n                              scene: 'form',\n                            });\n                          } else if (parents) {\n                            parents.push(node.id);\n                            this.setState({\n                              secondParent: node.name,\n                              parents: parents,\n                              scene: 'form',\n                            });\n                          }\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'selectSpouse' && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({scene: 'form'});\n              }}>\n              &#10060;{' '}\n            </div>\n            <div className=\"select-for-label\">\n              Select spouse for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            spouseName: node.name,\n                            spouse: node.id,\n                            scene: 'form',\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'selectEx' && (\n          <div>\n            <div\n              className=\"close\"\n              onClick={() => {\n                this.setState({scene: 'form'});\n              }}>\n              &#10060;{' '}\n            </div>\n            <div className=\"select-for-label\">\n              Select ex for {this.state.name}\n            </div>\n            <input\n              placeholder=\"Search...\"\n              className=\"search-box\"\n              type=\"text\"\n              onChange={this.onSearchChange}\n            />\n\n            <div className=\"family-list-items\">\n              {this.props.tree &&\n                this.props.tree\n                  .filter(data => {\n                    if (\n                      data.id === '00000000-0000-0000-0000-00000000000' ||\n                      data.id === '0'\n                    ) {\n                      return false;\n                    }\n                    if (!data.name) {\n                      return false;\n                    }\n                    if (\n                      data &&\n                      data.name &&\n                      this.state.search &&\n                      this.state.search.length > 0\n                    ) {\n                      return (\n                        data.name\n                          .toLowerCase()\n                          .indexOf(this.state.search.toLowerCase()) > -1\n                      );\n                    } else {\n                      return true;\n                    }\n                  })\n                  .map((item, key) => {\n                    return (\n                      <div\n                        key={key}\n                        className=\"family-list-item\"\n                        onClick={() => {\n                          let node = item;\n                          this.setState({\n                            exName: node.name,\n                            exs: [{id: node.id}],\n                            scene: 'form',\n                          });\n                        }}>\n                        {item.name}\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        )}\n        {this.state.scene === 'form' && (\n          <div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Name</div>\n              <input\n                name=\"name\"\n                placeholder=\"Name\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Full name</div>\n              <input\n                name=\"fullName\"\n                placeholder=\"Full name\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.fullName}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Birth place</div>\n              <input\n                name=\"birthPlace\"\n                placeholder=\"Birth place\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthPlace}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Birth date</div>\n              <input\n                name=\"birthDate\"\n                placeholder=\"Birth date\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.birthDate}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">City</div>\n              <input\n                name=\"city\"\n                placeholder=\"City\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.city}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Contact</div>\n              <input\n                name=\"contact\"\n                placeholder=\"Contact\"\n                className=\"family-list-form-input\"\n                type=\"text\"\n                value={this.state.contact}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Gender</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'male' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'male'});\n                  }}>\n                  Male\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'female' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'female'});\n                  }}>\n                  Female\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.gender === 'other' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({gender: 'other'});\n                  }}>\n                  Other\n                </span>\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Status</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.status === 'alive' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({status: 'alive'});\n                  }}>\n                  Alive\n                </span>\n                <span\n                  className={\n                    'radio' +\n                    (this.state.status === 'deceased' ? ' radio-selected' : '')\n                  }\n                  onClick={() => {\n                    this.setState({status: 'deceased'});\n                  }}>\n                  Deceased\n                </span>\n              </div>\n            </div>\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                '00000000-0000-0000-0000-00000000000' ||\n                this.state.parents[0] === '0')\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">1st Parent</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      'radio' +\n                      (this.state.parents && this.state.parents[0]\n                        ? ' radio-selected'\n                        : '')\n                    }\n                    onClick={() => {\n                      this.setState({search: ''}, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[0] &&\n                            this.state.firstParent\n                          )\n                        ) {\n                          this.setState({scene: 'selectParent'});\n                        }\n                      });\n                    }}>\n                    {this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[0] &&\n                      this.state.firstParent\n                    ) && 'Select'}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[0] &&\n                    this.state.firstParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          if (\n                            this.state.parents &&\n                            this.state.parents.length > 1\n                          ) {\n                            let parents = this.state.parents;\n                            parents = [this.state.parents[1]];\n                            let firstParent = this.state.secondParent;\n                            this.setState({\n                              parents: parents,\n                              firstParent: firstParent,\n                              secondParent: null,\n                            });\n                          } else {\n                            let parents = [];\n                            this.setState({\n                              parents: parents,\n                              firstParent: null,\n                              secondParent: null,\n                            });\n                          }\n                        }}>\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            {/* Hide if its a root node */}\n            {!(\n              this.state.parents &&\n              this.state.parents[0] &&\n              (this.state.parents[0] ===\n                '00000000-0000-0000-0000-00000000000' ||\n                this.state.parents[0] === '0')\n            ) && (\n              <div className=\"family-list-form\">\n                <div className=\"family-list-form-label\">2nd Parent</div>\n                <div className=\"family-list-form-free-input\">\n                  <span\n                    className={\n                      'radio' +\n                      (this.state.parents && this.state.parents[1]\n                        ? ' radio-selected'\n                        : '')\n                    }\n                    onClick={() => {\n                      this.setState({search: ''}, () => {\n                        if (\n                          !(\n                            this.state.parents &&\n                            this.state.parents[1] &&\n                            this.state.secondParent\n                          )\n                        ) {\n                          this.setState({scene: 'selectParent'});\n                        }\n                      });\n                    }}>\n                    {this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent}\n                    {!(\n                      this.state.parents &&\n                      this.state.parents[1] &&\n                      this.state.secondParent\n                    ) && 'Select'}\n                  </span>\n                  {this.state.parents &&\n                    this.state.parents[1] &&\n                    this.state.secondParent && (\n                      <div\n                        className=\"remove-button-small\"\n                        onClick={() => {\n                          let parents = [this.state.parents[0]];\n                          this.setState({\n                            parents: parents,\n                            secondParent: null,\n                          });\n                        }}>\n                        -\n                      </div>\n                    )}\n                </div>\n              </div>\n            )}\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Spouse</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.spouse && this.state.spouse.length > 0\n                      ? ' radio-selected'\n                      : '')\n                  }\n                  onClick={() => {\n                    this.setState({search: ''}, () => {\n                      if (!this.state.spouse) {\n                        this.setState({scene: 'selectSpouse'});\n                      }\n                    });\n                  }}>\n                  {this.state.spouseName}\n                  {!(this.state.spouse && this.state.spouse.length > 0) &&\n                    'Select'}\n                </span>\n                {this.state.spouse && this.state.spouse && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        spouseName: null,\n                        spouse: null,\n                      });\n                    }}>\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\">Ex</div>\n              <div className=\"family-list-form-free-input\">\n                <span\n                  className={\n                    'radio' +\n                    (this.state.exs && this.state.exs.length > 0\n                      ? ' radio-selected'\n                      : '')\n                  }\n                  onClick={() => {\n                    this.setState({search: ''}, () => {\n                      if (!(this.state.exs && this.state.exs.length > 0)) {\n                        this.setState({scene: 'selectEx'});\n                      }\n                    });\n                  }}>\n                  {this.state.exName}\n                  {!(\n                    (this.state.ex && this.state.exs.length > 0) ||\n                    (this.state.exName && this.state.exName.length > 0)\n                  ) && 'Select'}\n                </span>\n                {this.state.exs && this.state.exs.length > 0 && (\n                  <div\n                    className=\"remove-button-small\"\n                    onClick={() => {\n                      this.setState({\n                        exName: null,\n                        exs: [],\n                      });\n                    }}>\n                    -\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"family-list-form\">\n              <div className=\"family-list-form-label\"></div>\n              {this.state.mode === 'edit' && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.remove(this.state.id);\n                    }}>\n                    Remove\n                  </div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.save();\n                    }}>\n                    Save\n                  </div>\n                </div>\n              )}\n              {this.state.mode === 'new' && (\n                <div className=\"family-list-form-free-input\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      this.add();\n                    }}>\n                    Add\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}